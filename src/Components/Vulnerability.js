import React,{useEffect,useState} from 'react'
import {useHistory} from "react-router-dom";
//import "./styles/malware.scss";
import "./styles/malware.scss";
import {FaCommentDots} from "react-icons/fa";
import axios from "axios";
import {Content} from './Content.js';
import {FaCommentDots as CommentIcon} from "react-icons/fa";
import moment from "moment";

import {motion} from "framer-motion";
import { animeVar,transitions } from './animationVariants';


function Vulnerability() {
  useEffect(() =>{
    axios.get("http://localhost:3001/vulns").then((res)=>{
   setvulnList(res.data);

}
)
 } ,[])
    const[vulnList,setvulnList]=useState([]);
    const history=useHistory();
    return (
     
         <motion.div 
         exit="out"
        initial="initial"
        animate="in"
        variants={animeVar}
        transition={transitions}
          className="container">
          
          {vulnList.map((content,key)=>{
                 return (  
                    <div  className="card latest-card" >
                        <div className='image-wrapper' >
                             <img  src={`http://localhost:3001/images/post/${content.image}`} alt=""/>
                             </div>
            
               <div className="content-section">
                <h1 className="title"  onClick={()=>(history.push(`/malware/:${content.id}`))}>{content.title}</h1>  
                <div className="metadata"><span><i>created by</i>:{content.username} </span>
                <span> <i>Date</i>:{moment().format("DD-MM-YYYY")}</span>
                <CommentIcon  className="icon" onClick={()=>(history.push(`/post/:${content.id}/comments`))}/>
                 </div> 
               <p className="content">{content.postText}</p>
               </div>
               </div>
                 ) })}
               
            
      
      {/* <Skeleton type="metadata"/>
      <Skeleton type="title"/>
      <Skeleton type="content"/>
      <Skeleton type="image"/> */}
    




 </motion.div>
       
        
    )
}

export default Vulnerability;
